name: ðŸš€ Staging/Production Deploy

on:
  release:
    types: [released, prereleased]

env:
  ARTIFACT_NAME: invest-v3-${{ github.ref_name }}.zip

permissions:
  contents: write
  deployments: write
  
concurrency: build-${{ github.ref_name }}
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.action == 'prereleased'
    steps:
      - name: 'ðŸ“¥ Checkout Code from Release Tag'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: 'ðŸ”¨ Build App'
        id: build
        uses: ./.github/actions/build-app
        with:
          build-args: --mode mainnet
          github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.event.action == 'prereleased'
    environment: 
      name: staging
      url: ${{ steps.deploy.outputs.deployment-url }}
    steps:
      - name: 'ðŸ“¥ Checkout Code'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: 'ðŸš€ Deploy App to Staging'
        id: deploy
        uses: ./.github/actions/deploy-app
        with:
          environment: staging
          cloudflare-api-token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          cloudflare-account-id: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    runs-on: ubuntu-latest
    if: github.event.action == 'released'
    environment: 
      name: production
      url: ${{ steps.deploy.outputs.deployment-url }}
    steps:
      - name: 'ðŸ“¥ Checkout Code'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: 'ðŸš€ Deploy App to Production'
        id: deploy
        uses: ./.github/actions/deploy-app
        with:
          environment: prod
          cloudflare-api-token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          cloudflare-account-id: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

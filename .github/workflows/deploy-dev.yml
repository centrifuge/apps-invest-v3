name: ðŸš€ Deploy & CI Checks

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: preview-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  APP_NAME: invest-v3

permissions:
  contents: read
  deployments: write
  issues: write
  pull-requests: write
  statuses: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'ðŸ“¥ Checkout Code'
        uses: actions/checkout@v4

      - name: 'ðŸ”¨ Build App'
        id: build
        uses: ./.github/actions/build-app
        with:
          build-args: --mode testnet

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event_name == 'pull_request' && 'preview' || 'demo' }}
      url: ${{ steps.deploy.outputs.deployment-url }}
    outputs:
      deployment-url: ${{ steps.deploy.outputs.deployment-url }}
    steps:
      - name: 'ðŸ“¥ Checkout Code'
        uses: actions/checkout@v4

      - name: 'ðŸš€ Deploy App'
        id: deploy
        uses: ./.github/actions/deploy-app
        with:
          environment: ${{ github.event_name == 'pull_request' && 'dev' || 'demo' }}
          cloudflare-api-token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          cloudflare-account-id: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  performance-score:
    needs: deploy
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: 'ðŸ“¥ Checkout Code'
        uses: actions/checkout@v4

      - name: 'ðŸ“Š Performance Test with Lighthouse'
        run: |
          npm install -g @lhci/cli
          lhci autorun --config=lighthouserc.json --collect.url=${{ needs.deploy.outputs.deployment-url }}
        env:
          LHCI_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

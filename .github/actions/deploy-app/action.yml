name: 'Deploy App GH action'
description: 'Deploy app with environment-based configuration'

inputs:
  environment:
    description: 'Environment (dev, demo, staging, prod)'
    required: true
  cloudflare-api-token:
    description: 'Cloudflare API token'
    required: true
  cloudflare-account-id:
    description: 'Cloudflare account ID'
    required: true
  github-token:
    description: 'GitHub token'
    required: true

runs:
  using: 'composite'
  steps:
    - name: '🟢 Setup Node.js'
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: '📦 Download Build Artifact'
      if: inputs.environment != 'prod'
      uses: actions/download-artifact@v4
      with:
        name: invest-v3-build-${{ github.sha }}

    - name: '📥 Download Build Artifact from Release'
      if: inputs.environment == 'prod'
      shell: sh
      run: |
        ARTIFACT_NAME="invest-v3-${{ github.ref_name }}.zip"
        gh release download ${{ github.ref_name }} \
          --repo ${{ github.repository }} \
          --pattern "$ARTIFACT_NAME" \
          --dir ./
        
        # Extract the zip file
        unzip "$ARTIFACT_NAME" -d dist
      env:
        GH_TOKEN: ${{ inputs.github-token }}

    - name: '⚙️ Determine wrangler command'
      id: wrangler-command
      shell: sh
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          CMD="versions upload --env ${{ inputs.environment }}"
        elif [ "${{ github.event.action }}" = "prereleased" ]; then
          CMD="versions upload --env ${{ inputs.environment }} --preview-alias staging"
        else
          CMD="deploy --env ${{ inputs.environment }}"
        fi
        echo "Wrangler command: $CMD"
        echo "cmd=$CMD" >> $GITHUB_OUTPUT

    - name: '📦 Setup pnpm (for Wrangler)'
      uses: pnpm/action-setup@v3
      with:
        version: 10

    - name: '🚀 Deploy to Cloudflare'
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ inputs.cloudflare-api-token }}
        accountId: ${{ inputs.cloudflare-account-id }}
        command: ${{ steps.wrangler-command.outputs.cmd }}
      id: deploy

    - name: '⚙️ Create Deployment Status'
      if: always()
      shell: sh
      run: |
        if [ "${{ steps.deploy.outcome }}" = "success" ]; then
          gh api repos/:owner/:repo/deployments \
            --method POST \
            --field ref=${{ github.ref }} \
            --field environment=${{ inputs.environment }} \
            --field description="Deployed to ${{ inputs.environment }}" \
            --field auto_inactive=false
        fi
      env:
        GH_TOKEN: ${{ inputs.github-token }}

outputs:
  deployment-url:
    description: 'URL of the deployed application'
    value: ${{ steps.deploy.outputs.deployment-url }}
